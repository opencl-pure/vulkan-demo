package main

import (
    "fmt"
    "log"

    "github.com/ebitengine/purego"
)

var (
    vulkanLib                     uintptr
    vkCreateInstance               VkCreateInstanceFunc
    vkEnumeratePhysicalDevices     VkEnumeratePhysicalDevicesFunc
    vkGetPhysicalDeviceProperties  VkGetPhysicalDevicePropertiesFunc
    vkGetPhysicalDeviceMemoryProperties VkGetPhysicalDeviceMemoryPropertiesFunc
)

// LoadVulkan ‚Äì Naƒç√≠tanie Vulkan kni≈ænice a funkci√≠
func LoadVulkan() {
    var err error
    vulkanLib, err = purego.Dlopen("libvulkan.so", purego.RTLD_NOW)
    if err != nil {
        log.Fatalf("‚ùå Vulkan kni≈ænica nen√°jden√°: %v", err)
    }
    fmt.Println("‚úÖ Vulkan kni≈ænica naƒç√≠tan√°!")

    // Naƒç√≠tanie funkci√≠
    purego.RegisterLibFunc(&vkCreateInstance, vulkanLib, "vkCreateInstance")
    purego.RegisterLibFunc(&vkEnumeratePhysicalDevices, vulkanLib, "vkEnumeratePhysicalDevices")
    purego.RegisterLibFunc(&vkGetPhysicalDeviceProperties, vulkanLib, "vkGetPhysicalDeviceProperties")
    purego.RegisterLibFunc(&vkGetPhysicalDeviceMemoryProperties, vulkanLib, "vkGetPhysicalDeviceMemoryProperties")
}

// UnloadVulkan ‚Äì Uvoƒænenie kni≈ænice
func UnloadVulkan() {
    if vulkanLib != 0 {
        purego.Dlclose(vulkanLib)
        fmt.Println("üîÑ Vulkan kni≈ænica uvoƒænen√°!")
        vulkanLib = 0
    }
}

